// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Password11Server;

#nullable disable

namespace Password11Server.Migrations
{
    [DbContext(typeof(PasswordContext))]
    [Migration("20240525195912_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Password11Lib.JsonModel.JsonAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<long>>("Fields")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<string>("JsonUserLogin")
                        .HasColumnType("character varying(64)");

                    b.Property<List<long>>("Tags")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.HasKey("Id");

                    b.HasIndex("JsonUserLogin");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasMaxLength(1536)
                        .HasColumnType("bytea");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean");

                    b.Property<string>("JsonUserLogin")
                        .HasColumnType("character varying(64)");

                    b.Property<byte[]>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("bytea");

                    b.Property<bool>("Official")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("JsonUserLogin");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("bytea");

                    b.Property<string>("JsonUserLogin")
                        .HasColumnType("character varying(64)");

                    b.Property<byte[]>("TagColorString")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("JsonUserLogin");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonUser", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("character varying(48)");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonAccount", b =>
                {
                    b.HasOne("Password11Lib.JsonModel.JsonUser", null)
                        .WithMany("Accounts")
                        .HasForeignKey("JsonUserLogin");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonField", b =>
                {
                    b.HasOne("Password11Lib.JsonModel.JsonUser", null)
                        .WithMany("Fields")
                        .HasForeignKey("JsonUserLogin");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonTag", b =>
                {
                    b.HasOne("Password11Lib.JsonModel.JsonUser", null)
                        .WithMany("Tags")
                        .HasForeignKey("JsonUserLogin");
                });

            modelBuilder.Entity("Password11Lib.JsonModel.JsonUser", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Fields");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
